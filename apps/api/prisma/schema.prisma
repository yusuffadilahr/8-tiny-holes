// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id                  String   @id @default(uuid())
  name                String
  email               String
  password            String
  address             String
  phoneNumber         String
  role                RoleUser @default(USER)
  profilePicture      String
  isVerify            Boolean  @default(false)
  forgotPasswordToken String?  @db.Text
  verifyEmailCode     String

  cartProduct CartProduct[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("user")
}

enum RoleUser {
  ADMIN
  USER
}

model Product {
  id          String @id @default(uuid())
  productName String
  description String @db.LongText
  stock       Int
  price       Int
  category    String

  productImage ProductImage[]
  sizeChart    SizeChart[]
  cartProduct  CartProduct[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("product")
}

model SizeChart {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  size      String

  @@map("sizeChart")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  imageUrl  String   @db.Text

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("productImage")
}

model CartProduct {
  id        Int     @id @default(autoincrement())
  productId String
  Product   Product @relation(fields: [productId], references: [id])
  User      User?   @relation(fields: [userId], references: [id])
  userId    String?
  size      String
  qty       Int
  price     Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("cartProduct")
}

model Category {
  id       Int    @id @default(autoincrement())
  category String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("category")
}
